Observations: 

1) Each GroupStorage containers is used only to calculate an associated
   potential contribution.

2) Additional specialized potential might require additional data 
   structures (e.g., impropers, angle-dependent H bonding forces, etc.)

3) It would be preferable to have each potential responsible for 
   controlling communication of group-like data structures it requires.

------------------------------------------------------------------------
Ideas:

1) Make each GroupStorage a member of the associated potential.

2) Abstract communication of groups in a manner that can be generalized
   to other potentials. This requires an analysis of how the groups 
   storage containers are currently used in exchanges, distribution,
   and collection.

------------------------------------------------------------------------
Plan (order of changes):

1) Make changes to Buffer first, to first move (pack|unpack)Group
   methods to Group<N> template, where they belong (Done).

2) Change all methods of Exchanger that involve GroupStorage 
   to methods of GroupStorage<N> (Done).

3) Create an appropriate abstraction for use of GroupStorage by
   GroupDistributor and GroupCollector (not begun, see below and IdGroup)

4) Move GroupStorage to be a member of the corresponding Potential.

5) Create PotentialMaster. This can read PairPotential, etc., then
   read the pair style. 

------------------------------------------------------------------------
Next Step:

  - Figure out how to abstract the association between ConfigIos,
    GroupDistributor and GroupCollector and GroupStorage<N> classes. 

    The problem is that these classes interact using pointers to
    Group<N> objects, and that the use of templates makes it very
    difficult to write generic interfaces or virtual functions.

    Proposal: Create a new class IdGroup to act as a generic wrapper
    for a group.

    See proposal in the IdGroup file.

