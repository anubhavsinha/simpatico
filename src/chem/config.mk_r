#-----------------------------------------------------------------------
# This makefile file defines:
#
#   - A variable $(CHEM_DEFS) that is passed to the processor to define 
#     preprocessor flags that effect the code in the mcMd/ directory. 
#
#   - A variable $(CHEM_SUFFIX) which is added as a suffix to the name
#     of the chem library.
#
#   - The name $(CHEM_LIB) of the chem library file.
#
# This file is included by every makefile in the chem directory, and in 
# directories containing source code that depends on the Chem namespace.
# It should be included after $(SRC_DIR)/config.mk and before
# $(SRC_DIR)/chem/patterns.mk.
#-----------------------------------------------------------------------
# Makefile variables to define preprocessor macros 

#-----------------------------------------------------------------------
# The following code defines the variables CHEM_DEFS and CHEM_SUFFIX.
#
# The variable CHEM_DEFS is used to pass preprocessor definitions to
# the compiler, using the "-D" compiler option. If not empty, it must 
# consist of a list of zero or more preprocessor macro names, each 
# preceded by the compiler flag "-D".  For example, setting CHEM_DEFS 
# to "-DCHEM_ANGLE -DCHEM_DIHEDRAL" will cause compilation of a version 
# of the code with angle and dihedral potentials enabled.
#
# The variable CHEM_SUFFIX is appended to the base names of the library 
# mcMd.a in the $(LIB_DIR) directory. It is also added to the mcMd library
# and to the executables mcSim, mdSim, and ddSim in the $(BIN_DIR). If no
# other features were enabled, setting CHEM_SUFFIX to "_a", to denote a 
# version with angular potentials enabled, would lead to creation of a 
# library file named chem_a.a in the directory $(SRC_DIR)/chem and 
# executables named mcSim_a and mdSim_a. 
 
CHEM_DEFS=
CHEM_SUFFIX:=

# The variable CHEM_DEFS is a recursive (normal) makefile variable, and
# may be extended using the += operator, e.g., CHEM_DEFS+=-DCHEM_ANGLE.
# The CHEM_SUFFIX is a non-recursive makefile variable, which may be 
# extended using the := operator, as CHEM_SUFFIX:=$(CHEM_SUFFIX)_a. 
# They are defined differently because the += operator adds a white space
# before an added string, which is appropriate for CHEM_DEFS, but not for 
# CHEM_SUFFIX. 
#
# Each if block in what follows contains two lines: The first adds a 
# string containing a preprocessor macro to CHEM_DEFS. The second adds
# an underscore and a string of one or two identifying letters to 
# CHEM_SUFFIX. The addition of suffixes to the library and executable
# names is optional, and may be suppressed by commenting out the relevant 
# lines.
#
# See the file src/mcMd/dox/preprocessor.dox for an explanation of all
# of preprocessor macros listed below.

#-----------------------------------------------------------------------
# Name of static library for Chem namespace.

CHEM_ALL_SUFFIX=$(UTIL_MPI_SUFFIX)$(UTIL_SUFFIX)$(CHEM_SUFFIX)

chem_LIBNAME=chem$(CHEM_ALL_SUFFIX)
chem_LIB=$(BLD_DIR)/chem/lib$(chem_LIBNAME).a
#-----------------------------------------------------------------------
