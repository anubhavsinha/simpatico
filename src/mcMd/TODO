
Constant Pressure MD 
--------------------

- Port and test NptIntegrator subclass from DdMd.

Non-Orthorhombic (Rigid) Boundaries
-----------------------------------

- Use new applyShift method in MSD analyzer classes.

- Find other uses of Boundary::lengths in McMd namespace.
  Add tests to cause crash before misuse, as needed.

- Add Boundary::isOrthorhombic test other classes that require 
  orthorhombic boundaries.

- Add tests for CellList specifically for Monoclinic Boundary.

- Make an example in a Monoclinic cell and try running it with 
  mdSim and mcSim.

Deformable Boundaries
---------------------

- Generalize snapshot and obsolete pair list methods to use 
  miniminumDeformRatio to deal optimally with MD in deforming boundaries.

AtomType
--------

  - Add static bool atomHaveDiameters_ and non-static double diameter_ members

  - Make Simulation a friend of AtomType

  - Add optional atomHaveDiameters_ parameter in Simulation::readParameters

  - Optionally read and write diameter_ members. Initialize to 1.0 by default.

Generator
---------

  - Write unit test for PointGenerator

  - Write LinearGenerator and a corresponding unit test

  - Add optional diameter and epsilon parameters to atom type. 

  - Add a command to generate molecules, with scale and an nMolecule for each
    species. The command should create a temporary cell list and first fill
    it with all molecules and atoms already in the system. The command will
    allow for either multiple species in one command or multiple commands with
    different species.

  - Add method to associate a generator with a Species.

Species
-------

- Replace Species generator method by non-member function template with 
  explicit specializations for Linear and Atom.

- Move Species, SpeciesGroup etc. to a new Chem namespace, so it can be 
  used in Tool namespace.

Serialization
-------------

- Test save / load with perturbation
- Test save / load with replica move
- Test MD serialization after forcing pair list rebuild upon restart output
- Move restart interval and file name, and isInitialized_  to Simulation base 
  classs.

Perturbation
------------

- Modify so that perturbation can be used without MPI, or change conditional 
  compilation so that a perturbation can only be compiled ifdef UTIL_MPI.

Interactions (Design change):
-----------------------------

- Make Interaction classes apply to only one choice of type index / indices.
  PotentialImpl class templates would then hold an array of Interactions.

- Create << and >> operators for each Interaction class. 

- Change file format to read typeId (ids) << Interaction.

SystemAccess base classes
-------------------------

- Rename SubSystem SystemAccess
- Define (Mc|Md)SystemAccess classes with potential energy accessors
- Derive analyzers from a public Analyzer and a protected (Mc|Md)SystemAccess
- Remove replace system().typePotential() by typePotential() in analyzers
- Derive SystemMcMove from a protected McSystemAccess
- Remove replace system().typePotential() by typePotential() in mcMoves
- Derive MdIntegrator from a protected MdSystemAccess
- Remove replace system().typePotential() by typePotential() in mdIntegrators

